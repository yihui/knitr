on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: Check with knitr examples

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      DISPLAY: ':99.0'
      RGL_USE_NULL: TRUE

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      # TODO: Use next tag once this commit is in a release
      - uses: r-lib/actions/setup-tinytex@5f1c134
        env:
          # install full prebuilt version
          TINYTEX_INSTALLER: TinyTeX

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "18.04"))')
          sudo apt-get install -y libpoppler-cpp-dev graphviz asymptote highlight coffeescript scala optipng
          # downgrade ruby to remove deprecated
          # https://github.com/rubygems/rubygems/issues/3068
          sudo gem update --system 3.0.8

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Retrieve knitr-examples
        uses: actions/checkout@v2
        with:
          repository: cderv/knitr-examples
          path: knitr-examples
          clean: false
          ref: gha

      - name: Check knitr-examples
        env:
          TRAVIS: 'true'
        run: |
          rm knitr-examples/cache -rf
          make integration
        shell: bash
